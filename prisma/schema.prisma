generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Game {
  ACC   @map("Assetto Corsa Competizione")
  F1_23 @map("F1 23")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  username      String?   @unique
  firstName     String?
  lastName      String?

  profile    Profile?
  accounts   Account[]
  sessions   Session[]
  ownedTeams Team[]    @relation(name: "team-to-owner")
}

model Profile {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Team {
  id           String @id @default(cuid())
  name         String @unique
  abbreviation String @unique @db.VarChar(3)
  password     String

  owners  User[]   @relation(name: "team-to-owner")
  rosters Roster[]
}

model Roster {
  id     String @id @default(cuid())
  name   String
  game   Game
  team   Team   @relation(fields: [teamId], references: [id])
  teamId String

  @@index([teamId])
}
